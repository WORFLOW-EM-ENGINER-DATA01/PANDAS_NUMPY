{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0123\n",
      "0123\n",
      "0123\n",
      "4 2\n"
     ]
    }
   ],
   "source": [
    "l = [6, 9, 1, 2, 3, 4, 3, 1, 4, 3, 9, 6, 2, 2]\n",
    "w = [1, 2, 3, 4]\n",
    "\n",
    "\"\"\"\n",
    "Attention au calcul de vos indices dans le parcours\n",
    "\n",
    "14 - 4 = 0\n",
    "\n",
    "\n",
    "j: 0  1  2 ...                   10 11 12 13\n",
    "\n",
    "[  6, 9, 1, 2, 3, 4, 3, 1, 4, 3, 9, 6, 2, 2 ]\n",
    "                                [1, 2, 3, 4 ]                \n",
    "                               \n",
    "                              i: 0  1  2  3\n",
    "\"\"\"\n",
    "\n",
    "# On doit parcourir la liste - la longueur de la séquence que l'on recherche\n",
    "for j in range(len(l) - len(w) + 1):\n",
    "    \n",
    "    # Le compteur est ré-initialisé à 0 à chaque tour de boucle\n",
    "    # Il sert à savoir si on a trouvé la séquence w counter == len(w)\n",
    "    counter = 0\n",
    "    for i in range(len(w)):\n",
    "        if w[i] == l[i+j]:\n",
    "            counter += 1\n",
    "            \n",
    "    # On regarde si on a trouvé la séquence\n",
    "    # si c'est le cas on affiche la position j du début de la séquence\n",
    "    # et on sort de la boucle\n",
    "    if counter == len(w) :\n",
    "        print(j)\n",
    "        break\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.5.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
